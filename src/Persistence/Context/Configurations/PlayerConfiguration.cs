// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using Persistence.Context;
using Persistence;
using System;

#nullable disable

namespace Persistence.Context.Configurations
{
    public partial class PlayerConfiguration : IEntityTypeConfiguration<Player>
    {
        public void Configure(EntityTypeBuilder<Player> entity)
        {
            entity.HasKey(e => new { e.UserId, e.GameId })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.HasIndex(e => e.GameId, "game_id_idx");

            entity.HasIndex(e => e.LocId, "loc_id");

            entity.HasIndex(e => e.PlayerAlias, "player_alias");

            entity.HasIndex(e => e.Side, "side");

            entity.Property(e => e.UserId)
                .HasColumnType("int(3) unsigned zerofill")
                .HasColumnName("user_id")
                .HasDefaultValueSql("'000'");

            entity.Property(e => e.GameId)
                .HasColumnType("int(4) unsigned zerofill")
                .HasColumnName("game_id")
                .HasDefaultValueSql("'0000'");

            entity.Property(e => e.AliasColor)
                .IsRequired()
                .HasMaxLength(7)
                .HasColumnName("alias_color")
                .HasDefaultValueSql("'#000000'");

            entity.Property(e => e.AutomodPromotedId)
                .HasColumnType("smallint(4)")
                .HasColumnName("automod_promoted_id");

            entity.Property(e => e.AutomodRoleId)
                .HasColumnType("smallint(4)")
                .HasColumnName("automod_role_id");

            entity.Property(e => e.DeathDay)
                .HasColumnType("smallint(2)")
                .HasColumnName("death_day");

            entity.Property(e => e.DeathPhase)
                .HasColumnType("enum('','Alive','Day','Night')")
                .HasColumnName("death_phase");

            entity.Property(e => e.GaDesc)
                .HasColumnType("text")
                .HasColumnName("ga_desc");

            entity.Property(e => e.GaGroup)
                .HasMaxLength(50)
                .HasColumnName("ga_group");

            entity.Property(e => e.GaLock)
                .HasColumnType("smallint(1)")
                .HasColumnName("ga_lock");

            entity.Property(e => e.GaText)
                .IsRequired()
                .HasColumnType("enum('','on')")
                .HasColumnName("ga_text")
                .HasDefaultValueSql("''");

            entity.Property(e => e.GameAction)
                .IsRequired()
                .HasColumnType("enum('none','alive','dead','all')")
                .HasColumnName("game_action")
                .HasDefaultValueSql("'none'");

            entity.Property(e => e.LocId)
                .HasColumnType("int(5) unsigned zerofill")
                .HasColumnName("loc_id");

            entity.Property(e => e.ModComment)
                .HasColumnType("text")
                .HasColumnName("mod_comment");

            entity.Property(e => e.ModchatId)
                .HasColumnType("int(5) unsigned zerofill")
                .HasColumnName("modchat_id");

            entity.Property(e => e.NeedReplace).HasColumnName("need_replace");

            entity.Property(e => e.NeedToConfirm)
                .HasColumnType("tinyint(4)")
                .HasColumnName("need_to_confirm");

            entity.Property(e => e.PhysItemLimit)
                .HasColumnType("int(4) unsigned")
                .HasColumnName("phys_item_limit");

            entity.Property(e => e.PhysMoveLimit)
                .HasColumnType("smallint(4) unsigned")
                .HasColumnName("phys_move_limit");

            entity.Property(e => e.PhysMoves)
                .HasColumnType("smallint(5) unsigned")
                .HasColumnName("phys_moves");

            entity.Property(e => e.PlayerAlias)
                .HasMaxLength(50)
                .HasColumnName("player_alias");

            entity.Property(e => e.RoleId)
                .HasColumnType("int(2) unsigned zerofill")
                .HasColumnName("role_id")
                .HasDefaultValueSql("'01'");

            entity.Property(e => e.RoleName)
                .HasMaxLength(50)
                .HasColumnName("role_name");

            entity.Property(e => e.Side)
                .HasColumnType("enum('Good','Evil','Other')")
                .HasColumnName("side");

            entity.Property(e => e.ToughLives).HasColumnName("tough_lives");

            entity.Property(e => e.UpdateTime)
                .HasColumnType("timestamp")
                .HasColumnName("update_time")
                .HasDefaultValueSql("'0000-00-00 00:00:00'");

            entity.Property(e => e.UserComment)
                .HasColumnType("text")
                .HasColumnName("user_comment");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Player> entity);
    }
}
