// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

#nullable disable

namespace Persistence.Context.Configurations
{
    public partial class AmRoleConfiguration : IEntityTypeConfiguration<AmRole>
    {
        public void Configure(EntityTypeBuilder<AmRole> entity)
        {
            entity.ToTable("AM_roles");

            entity.Property(e => e.Id)
                .HasColumnType("int(3) unsigned zerofill")
                .ValueGeneratedNever()
                .HasColumnName("id");

            entity.Property(e => e.AHidden)
                .HasColumnName("a_hidden")
                .HasComment("0=false, 1=true");

            entity.Property(e => e.ActionDesc)
                .HasColumnType("text")
                .HasColumnName("action_desc");

            entity.Property(e => e.Attribute)
                .IsRequired()
                .HasColumnType("enum('','Brutal','Tough','Tinker','White Hat')")
                .HasColumnName("attribute");

            entity.Property(e => e.GameAction)
                .IsRequired()
                .HasColumnType("enum('none','alive','dead','all')")
                .HasColumnName("game_action")
                .HasDefaultValueSql("'none'");

            entity.Property(e => e.GroupName)
                .HasMaxLength(100)
                .HasColumnName("group_name");

            entity.Property(e => e.N0Knows)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("n0_knows")
                .HasDefaultValueSql("'none'");

            entity.Property(e => e.N0View)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("n0_view")
                .HasDefaultValueSql("'none'");

            entity.Property(e => e.Parity)
                .HasColumnName("parity")
                .HasComment("0=false,1=true");

            entity.Property(e => e.Promotion)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("promotion")
                .HasDefaultValueSql("'none'");

            entity.Property(e => e.PromotionParity)
                .IsRequired()
                .HasColumnType("enum('yes','no')")
                .HasColumnName("promotion_parity")
                .HasDefaultValueSql("'no'")
                .HasComment("Yes means keeps current parity status after promotion, does not gain promoted roles parity status.");

            entity.Property(e => e.RequireRole)
                .HasColumnType("tinyint(4)")
                .HasColumnName("require_role")
                .HasDefaultValueSql("'1'");

            entity.Property(e => e.RevealAs)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("reveal_as")
                .HasDefaultValueSql("'role'");

            entity.Property(e => e.RoleId)
                .HasColumnType("int(2) unsigned zerofill")
                .HasColumnName("role_id");

            entity.Property(e => e.Side)
                .IsRequired()
                .HasColumnType("enum('Good','Evil','Other')")
                .HasColumnName("side");

            entity.Property(e => e.TemplateId)
                .HasColumnType("int(2)")
                .HasColumnName("template_id");

            entity.Property(e => e.ViewResult)
                .HasColumnType("text")
                .HasColumnName("view_result");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<AmRole> entity);
    }
}
